# Interactive Hangman MCQ Game - .gitignore

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
game-env/
dev-env/
hangman-env/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# IDEs and Editors
.vscode/
.idea/
*.swp
*.swo
*~
.project
.pydevproject
.settings/

# Operating System Files
# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.lnk

# Linux
*~

# Game Specific Files
# Temporary files
temp/
tmp/
*.tmp

# User data (if any)
save_data/
user_profiles/
high_scores.json
settings.json

# Development and debugging
debug.log
game.log
error.log
*.debug

# Build artifacts
build/
dist/
*.exe
*.app
*.dmg
*.pkg

# Backup files
*.bak
*.backup
*.old

# Compressed files (unless they're assets)
*.zip
*.tar.gz
*.rar
*.7z

# Don't ignore assets that are part of the game
!assets/
!assets/**/*.mp3
!assets/**/*.wav
!assets/**/*.mp4
!assets/**/*.png
!assets/**/*.jpg
!assets/**/*.jpeg
!assets/**/*.gif

# But ignore any user-generated or temporary assets
assets/temp/
assets/cache/
assets/user_*

# Documentation build files
docs/_build/
docs/.doctrees/

# Test artifacts
.coverage
htmlcov/
.pytest_cache/
test_results/

# Package manager files (keep requirements.txt)
# pip
pip-log.txt
pip-delete-this-directory.txt

# conda
.conda/

# Virtual environment activation scripts (generated)
activate_env.*

# Local configuration files
config.local.py
settings.local.py
